{"version":3,"sources":["views/RegisterView.js","components/Notice/index.js","components/Notice/Notice.module.css","components/UI/Input/index.jsx","components/UI/Input/Input.module.css","components/UI/Button/index.jsx","components/UI/Button/Button.module.css","views/Auth.module.css"],"names":["RegisterView","state","name","email","password","error","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onRegister","length","showNotice","setTimeout","this","errorMessage","className","s","formWrapper","in","unmountOnExit","classNames","timeout","text","title","form","onSubmit","label","placeholder","autoComplete","onChange","required","type","Component","mapDispatchToProps","authOperations","register","connect","authSelectors","getError","Notice","container","notice","module","exports","Input","restProps","inputField","input","inputLabel","defaultProps","Button","classList","button","join"],"mappings":"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","file":"static/js/register-page.c9df7f60.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { authOperations, authSelectors } from '../redux/auth';\r\nimport Input from '../components/UI/Input';\r\nimport Button from '../components/UI/Button';\r\nimport Notice from '../components/Notice';\r\n\r\nimport s from './Auth.module.css';\r\nimport '../styles/animations/NoticeAppear.css';\r\n\r\nclass RegisterView extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    error: false,\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n\r\n    if (this.state.password.length < 7) {\r\n      this.showNotice();\r\n    }\r\n  };\r\n\r\n  showNotice = () => {\r\n    this.setState({\r\n      error: true,\r\n    });\r\n    \r\n    setTimeout(() => {\r\n      this.setState({ error: false, })\r\n    }, 2000);\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password, error } = this.state;\r\n    const { errorMessage } = this.props;\r\n\r\n    return (\r\n      <div className={s.formWrapper}>\r\n        \r\n        {errorMessage && \r\n          <CSSTransition\r\n            in={error}\r\n            unmountOnExit\r\n            classNames=\"notice\"\r\n            timeout={250}\r\n          >\r\n            <Notice text={errorMessage} />\r\n          </CSSTransition>\r\n        }\r\n\r\n        <h2 className={s.title}>Registration</h2>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n            <Input\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\" \"\r\n                autoComplete=\"name\"\r\n                onChange={this.handleChange}\r\n                required\r\n            />\r\n            <Input\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\" \"\r\n                autoComplete=\"email\"\r\n                onChange={this.handleChange}\r\n                required\r\n            />\r\n            <Input\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                placeholder=\" \"\r\n                autoComplete=\"new-password\"\r\n                type=\"password\"\r\n                onChange={this.handleChange}\r\n            />\r\n            <Button type=\"submit\" title=\"SignUp\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errorMessage: authSelectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterView);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notice.module.css'\r\n\r\nconst Notice = ({text}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <p className={s.notice}>{text}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nNotice.propTypes = {\r\n    text: PropTypes.string,\r\n};\r\n\r\nexport default Notice;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notice_container__2TFW5\",\"notice\":\"Notice_notice__38s41\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Input.module.css';\r\n\r\nconst Input = ({ type, name, label, className, ...restProps }) => {\r\n\r\n    return (\r\n        <label className={s.inputField}>\r\n          <input\r\n            className={s.input}\r\n            type={type}\r\n            name={name}\r\n            {...restProps}\r\n          />\r\n          <span className={s.inputLabel}>{label}</span>\r\n        </label>\r\n    );\r\n};\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  name: null,\r\n  label: '',\r\n  className: '',\r\n};\r\n\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  label: PropTypes.string,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputField\":\"Input_inputField__3ltHs\",\"inputLabel\":\"Input_inputLabel__1v25K\",\"input\":\"Input_input__1a8ol\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ type, title, className, ...restProps }) => {\r\n    const classList = [s.button, className].join(' ');\r\n    return (\r\n        <button\r\n            className={classList}\r\n            type={type}\r\n            {...restProps}\r\n        >\r\n            {title}\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  title: 'button'\r\n};\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../../styles/variables/colors.css'\",\"bgColor\":\"tomato\",\"accentColor\":\"#19c98a\",\"activeBtnColor\":\"#712375\",\"button\":\"Button_button__F1WOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Auth_formWrapper__3TlhN\",\"form\":\"Auth_form__21vrB\",\"title\":\"Auth_title__8e0Wd\"};"],"sourceRoot":""}