{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js","components/Container/Container.module.css","redux/contacts/actions.js","components/AppBar/Navigation.module.css","redux/contacts/reducer.js","redux/store.js","Router/routes.js","components/AppBar/Navigation.js","components/AppBar/AuthNav.js","img/default-avatar.png","components/AppBar/UserMenu.js","components/AppBar/AppBar.js","views/not_found.jpg","views/NotFoundView.js","Router/Router.js","components/Container/Container.js","App.js","index.js"],"names":["registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","post","data","message","login","logout","getCurrentUser","getState","persistedToken","auth","get","console","log","initialUserState","name","email","setUser","_","payload","user","setToken","setError","createReducer","error","combineReducers","getIsAuthenticated","state","getUserName","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","changeSorting","items","filter","id","sorter","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Navigation","to","routes","exact","className","s","link","activeClassName","activeLink","AuthNav","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","avatar","defaultAvatar","userMenu","src","alt","headerBtn","type","onClick","isAuthenticated","header","NotFoundPage","errorImg","HomeView","lazy","RegisterView","LoginView","ContactsView","Router","fallback","path","component","NotFoundView","Container","children","section","mainContainer","App","this","props","onRefresh","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkBe,GACXA,gBAjBoBC,YAAa,wBAkBjCC,gBAjBoBD,YAAa,wBAkBjCE,cAjBkBF,YAAa,sBAkB/BG,aAhBiBH,YAAa,qBAiB9BI,aAhBiBJ,YAAa,qBAiB9BK,WAhBeL,YAAa,mBAiB5BM,cAfkBN,YAAa,sBAgB/BO,cAfkBP,YAAa,sBAgB/BQ,YAfgBR,YAAa,oBAgB7BS,sBAd0BT,YAAa,8BAevCU,sBAd0BV,YAAa,8BAevCW,oBAdwBX,YAAa,6B,0CCbzCY,IAAMC,SAASC,QAAU,2CAEzB,I,MAAMC,EAAQ,SACNA,GACAH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF1DA,EAAQ,WAKNH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IA2DvC,GACXC,SAxDa,SAAAC,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DAC5BD,EAASE,EAAYxB,mBADO,kBAIDa,IAAMY,KAAK,gBAAiBJ,GAJ3B,gBAIhBK,EAJgB,EAIhBA,KACRV,EAAUU,EAAKV,OACfM,EAASE,EAAYtB,gBAAgBwB,IANb,kDAQxBJ,EAASE,EAAYrB,cAAc,KAAMwB,UARjB,kEAAJ,uDAyDxBC,MA7CU,SAAAP,GAAW,8CAAI,WAAMC,GAAN,iBAAAC,EAAA,6DACzBD,EAASE,EAAYpB,gBADI,kBAIES,IAAMY,KAAK,eAAgBJ,GAJ7B,gBAIbK,EAJa,EAIbA,KACRV,EAAUU,EAAKV,OACfM,EAASE,EAAYnB,aAAaqB,IANb,kDAQrBJ,EAASE,EAAYlB,WAAW,KAAMqB,UARjB,kEAAJ,uDA8CrBE,OAlCW,yDAAM,WAAMP,GAAN,SAAAC,EAAA,6DACjBD,EAASE,EAAYjB,iBADJ,kBAIPM,IAAMY,KAAK,iBAJJ,OAKbT,IACAM,EAASE,EAAYhB,iBANR,gDAQbc,EAASE,EAAYf,YAAY,KAAMkB,UAR1B,iEAAN,uDAmCXG,eAvBmB,yDAAM,WAAOR,EAAUS,GAAjB,qBAAAR,EAAA,2DACmBQ,IAArBC,EADE,EACjBC,KAAQjB,MADS,wDAOzBA,EAAUgB,GACVV,EAASE,EAAYd,yBARI,kBAWEG,IAAMqB,IAAI,kBAXZ,gBAWbR,EAXa,EAWbA,KACRS,QAAQC,IAAIV,GACZJ,EAASE,EAAYb,sBAAsBe,IAbtB,kDAerBJ,EAASE,EAAYZ,oBAAoB,KAAMe,UAf1B,0DAAN,0D,cC9CjBU,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAU,SAACC,EAAD,YAAMC,QAAsBC,MACtCC,EAAW,SAACH,EAAD,YAAMC,QAAsB1B,OACvC6B,EAAW,SAACJ,EAAD,YAAMC,SAEjBC,EAAOG,YAAcT,GAAD,mBACrBb,EAAYtB,gBAAkBsC,GADT,cAErBhB,EAAYnB,aAAemC,GAFN,cAGrBhB,EAAYhB,eAAgB,kBAAM6B,KAHb,cAIrBb,EAAYb,uBAAwB,SAAC8B,EAAD,YAAMC,WAJrB,IAOpB1B,EAAQ8B,YAAc,MAAD,mBACtBtB,EAAYtB,gBAAkB0C,GADR,cAEtBpB,EAAYnB,aAAeuC,GAFL,cAGtBpB,EAAYhB,eAAgB,kBAAM,QAHZ,IAMrBuC,EAAQD,YAAc,MAAD,mBACtBtB,EAAYrB,cAAgB0C,GADN,cAEtBrB,EAAYlB,WAAauC,GAFH,cAGtBrB,EAAYf,YAAcoC,GAHJ,cAItBrB,EAAYZ,oBAAsBiC,GAJZ,IAOZG,cAAgB,CAC3BL,OACA3B,QACA+B,UC7BW,GACXE,mBALuB,SAAAC,GAAK,OAAIA,EAAMjB,KAAKjB,OAM3CmC,YAJgB,SAAAD,GAAK,OAAIA,EAAMjB,KAAKU,KAAKL,Q,mBCD7Cc,EAAOC,QAAU,CAAC,OAAS,sCAAsC,UAAY,UAAU,cAAgB,iCAAiC,QAAU,2BAA2B,UAAY,6BAA6B,aAAe,gCAAgC,UAAY,6BAA6B,eAAiB,kCAAkC,OAAS,0BAA0B,aAAe,kC,+BCDnZ,iYAEaC,EAAsBrD,YAAa,gCACnCsD,EAAsBtD,YAAa,gCACnCuD,EAAoBvD,YAAa,8BAEjCwD,EAAoBxD,YAAa,8BACjCyD,EAAoBzD,YAAa,8BACjC0D,EAAkB1D,YAAa,4BAE/B2D,EAAuB3D,YAAa,iCACpC4D,EAAuB5D,YAAa,iCACpC6D,EAAqB7D,YAAa,+BAElC8D,EAAe9D,YAAa,yBAC5B+D,EAAgB/D,YAAa,2B,kBCd1CmD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,KAAO,yBAAyB,WAAa,+BAA+B,SAAW,6BAA6B,UAAY,8BAA8B,OAAS,6B,6MCevNY,EAAQnB,YAAc,IAAD,mBACtBS,KAAsB,SAACd,EAAD,YAAKC,WADL,cAEtBgB,KAAoB,SAACR,EAAD,OAAUR,EAAV,EAAUA,QAAV,4BAA4BQ,GAA5B,CAAmCR,OAFjC,cAGtBmB,KAAuB,SAACX,EAAD,OAAUR,EAAV,EAAUA,QAAV,OAAwBQ,EAAMgB,QAAO,qBAAGC,KAAgBzB,QAHzD,IAMrBwB,EAASpB,YAAc,GAAD,eACvBiB,KAAe,SAACtB,EAAD,YAAMC,YAGpB0B,EAAStB,YAAc,OAAD,eACvBkB,KAAgB,SAACvB,EAAD,YAAMC,YAGrB2B,EAAUvB,aAAc,GAAD,mBACxBQ,KAAsB,kBAAM,KADJ,cAExBC,KAAsB,kBAAM,KAFJ,cAGxBC,KAAoB,kBAAM,KAHF,cAIxBC,KAAoB,kBAAM,KAJF,cAKxBC,KAAoB,kBAAM,KALF,cAMxBC,KAAkB,kBAAM,KANA,cAOxBC,KAAuB,kBAAM,KAPL,cAQxBC,KAAuB,kBAAM,KARL,cASxBC,KAAqB,kBAAM,KATH,IAYvBf,EAAQD,YAAc,MAAD,mBACtBU,KAAoB,SAACf,EAAD,YAAMC,WADJ,cAEtBiB,KAAkB,SAAClB,EAAD,YAAMC,WAFF,cAGtBoB,KAAqB,SAACrB,EAAD,YAAMC,WAHL,IAMZM,cAAgB,CAC3BiB,QACAC,SACAE,SACAC,UACAtB,U,QCrCEuB,EAAU,sBACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHtD,CAMZC,MAGEC,EAAoB,CACtBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGVC,EAAQC,YAAe,CACzBC,QAAS,CACLtD,KAAMuD,YAAeP,EAAmBQ,KACxCC,SAAUC,GAEdrB,aACAsB,UAAUC,IAKC,GAACR,QAAOS,UAFLC,YAAaV,I,gCCxChB,EACL,IADK,EAED,YAFC,EAGJ,SAHI,EAID,Y,uBCoBCW,EAnBI,WACf,OACI,gCACI,cAAC,IAAD,CAASC,GAAIC,EAAaC,OAAK,EAACC,UAAWC,IAAEC,KAAMC,gBAAiBF,IAAEG,WAAtE,sBAIA,cAAC,IAAD,CACIP,GAAIC,EACJC,OAAK,EACLC,UAAWC,IAAEC,KACbC,gBAAiBF,IAAEG,WAJvB,0BCgBGC,EAvBC,WACZ,OACI,gCACI,cAAC,IAAD,CACIR,GAAIC,EACJC,OAAK,EACLC,UAAWC,IAAEC,KACbC,gBAAiBF,IAAEG,WAJvB,0BAQA,cAAC,IAAD,CACIP,GAAIC,EACJC,OAAK,EACLC,UAAWC,IAAEC,KACbC,gBAAiBF,IAAEG,WAJvB,uBChBG,MAA0B,2CCqBnCE,EAAqB,CACvBC,SAAUC,IAAe/E,QAGdgF,eATS,SAAC3D,GAAD,MAAY,CAChCZ,KAAMwE,IAAc3D,YAAYD,GAChC6D,OAAQC,KAO4BN,EAAzBG,EAnBE,SAAC,GAA8B,IAA7BE,EAA4B,EAA5BA,OAAQzE,EAAoB,EAApBA,KAAMqE,EAAc,EAAdA,SAC7B,OACI,sBAAKP,UAAWC,IAAEY,SAAlB,UACI,qBAAKb,UAAWC,IAAEU,OAAQG,IAAKH,EAAQI,IAAK7E,IAC5C,uBAAM8D,UAAWC,IAAEC,KAAnB,sBAAmChE,KACnC,wBAAQ8D,UAAWC,IAAEe,UAAWC,KAAK,SAASC,QAASX,EAAvD,0BCUGE,eAJS,SAAA3D,GAAK,MAAK,CAC9BqE,gBAAiBT,IAAc7D,mBAAmBC,MAGvC2D,EAbA,SAAC,GAAuB,IAAtBU,EAAqB,EAArBA,gBACb,OACI,yBAAQnB,UAAWC,IAAEmB,OAArB,UACI,cAAC,EAAD,IACCD,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,OCZ/B,MAA0B,sCCW1BE,EARM,WACnB,OACE,mCACE,qBAAKP,IAAKQ,EAAUP,IAAI,sBCDxBQ,GAAWC,gBAAK,kBACpB,iCAEIC,GAAeD,gBAAK,kBACxB,iCAEIE,GAAYF,gBAAK,kBACrB,iCAGIG,GAAeH,gBAAK,kBACxB,uDAiBaI,GAdA,WACb,OACE,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAMhC,EAAaC,OAAK,EAACgC,UAAWR,KAC3C,cAAC,IAAD,CAAOO,KAAMhC,EAAiBiC,UAAWN,KACzC,cAAC,IAAD,CAAOK,KAAMhC,EAAciC,UAAWL,KACtC,cAAC,IAAD,CAAOI,KAAMhC,EAAiBiC,UAAWJ,KACzC,cAAC,IAAD,CAAOI,UAAWC,U,oBCxBf,SAASC,GAAT,GAAkC,IAAbC,EAAY,EAAZA,SAClC,OACE,yBAASlC,UAAWC,KAAEkC,QAAtB,SACE,qBAAKnC,UAAWC,KAAEmC,cAAlB,SACGF,M,ICAHG,G,uKACJ,WACEC,KAAKC,MAAMC,c,oBAGb,WACE,OACE,eAACP,GAAD,WACE,cAAC,EAAD,IACA,cAAC,GAAD,W,GATUQ,aAeZnC,GAAqB,CACzBkC,UAAWhC,IAAe9E,gBAGb+E,eAAQ,KAAMH,GAAdG,CAAkC4B,I,YCfjDK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU3D,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAahB,QAAS,KAAMyB,UAAWT,EAAMS,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,GAAD,YAKRmD,SAASC,eAAe,W","file":"static/js/main.c73dba15.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    }\r\n}\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/users/signup', credentials);\r\n        token.set(data.token);\r\n        dispatch(authActions.registerSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message));\r\n    };\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const { data } = await axios.post('/users/login', credentials);\r\n        token.set(data.token);\r\n        dispatch(authActions.loginSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.message));\r\n    };\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message));\r\n    };\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const { auth: { token: persistedToken } } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const { data } = await axios.get('/users/current');\r\n        console.log(data);\r\n        dispatch(authActions.getCurrentUserSuccess(data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n    }\r\n}\r\n\r\nexport default {\r\n    register,\r\n    login,\r\n    logout,\r\n    getCurrentUser,\r\n}","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst setUser = (_, { payload }) => payload.user;\r\nconst setToken = (_, { payload }) => payload.token;\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: setUser,\r\n    [authActions.loginSuccess]: setUser,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: setToken,\r\n    [authActions.loginSuccess]: setToken,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    token,\r\n    error,\r\n});","const getIsAuthenticated = state => state.auth.token;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUserName\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../../styles/variables/colors.css'\",\"mainColor\":\"#0b2630\",\"mainContainer\":\"Container_mainContainer__1i2mt\",\"section\":\"Container_section__32cGE\",\"container\":\"Container_container__2OXeW\",\"titleWrapper\":\"Container_titleWrapper__3f69r\",\"mainTitle\":\"Container_mainTitle__blb2e\",\"childContainer\":\"Container_childContainer__3NmLo\",\"appear\":\"Container_appear__1QiSn\",\"appearActive\":\"Container_appearActive__2bEnQ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/ChangeFilter');\r\nexport const changeSorting = createAction('contacts/ChangeSorting');","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navigation_header__Kium1\",\"link\":\"Navigation_link__18bBj\",\"activeLink\":\"Navigation_activeLink__hGKfi\",\"userMenu\":\"Navigation_userMenu__2VqQR\",\"headerBtn\":\"Navigation_headerBtn__1rKNO\",\"avatar\":\"Navigation_avatar__3jkMw\"};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    addContactRequest, \r\n    addContactSuccess, \r\n    addContactError, \r\n    deleteContactRequest, \r\n    deleteContactSuccess, \r\n    deleteContactError,\r\n    fetchContactRequest, \r\n    fetchContactSuccess, \r\n    fetchContactError,\r\n    changeFilter, \r\n    changeSorting\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, {payload}) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst sorter = createReducer('date', {\r\n    [changeSorting]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContactError]: (_, { payload }) => payload,\r\n    [addContactError]: (_, { payload }) => payload,\r\n    [deleteContactError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    sorter,\r\n    loading,\r\n    error,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/reducer';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n        }\r\n    }),\r\n    logger\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default {store, persistor};","export default {\r\n    home: '/',\r\n    register: '/register',\r\n    login: '/login',\r\n    contacts: '/contacts',\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../Router/routes';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav>\r\n            <NavLink to={routes.home} exact className={s.link} activeClassName={s.activeLink}>\r\n                Homepage\r\n            </NavLink>\r\n\r\n            <NavLink\r\n                to={routes.contacts}\r\n                exact\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Contacts\r\n            </NavLink>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../Router/routes';\r\nimport s from './Navigation.module.css';\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n        <div>\r\n            <NavLink\r\n                to={routes.register}\r\n                exact\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Registration\r\n            </NavLink>\r\n            <NavLink\r\n                to={routes.login}\r\n                exact\r\n                className={s.link}\r\n                activeClassName={s.activeLink}\r\n            >\r\n                Login\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AuthNav;","export default __webpack_public_path__ + \"static/media/default-avatar.49abd8f3.png\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from '../../img/default-avatar.png';\r\nimport s from './Navigation.module.css';\r\n\r\nconst UserMenu = ({avatar, name, onLogout}) => {\r\n    return (\r\n        <div className={s.userMenu}>\r\n            <img className={s.avatar} src={avatar} alt={name} />\r\n            <span className={s.link}>Welcome, {name}</span>\r\n            <button className={s.headerBtn} type=\"button\" onClick={onLogout}>Logout</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: authSelectors.getUserName(state),\r\n    avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logout,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport s from './Navigation.module.css';\r\n\r\nconst AppBar = ({isAuthenticated}) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <Navigation />\r\n            {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);","export default __webpack_public_path__ + \"static/media/not_found.c1d9e774.jpg\";","import React from 'react';\nimport errorImg from './not_found.jpg';\n\nconst NotFoundPage = () => {\n  return (\n    <>\n      <img src={errorImg} alt=\"Page not found\" />\n    </>\n  );\n};\n\nexport default NotFoundPage;\n","import React, { Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport NotFoundView from '../views/NotFoundView';\r\n\r\nconst HomeView = lazy(() =>\r\n  import('../views/HomeView.js' /* webpackChunkName: \"home-page\" */),\r\n);\r\nconst RegisterView = lazy(() =>\r\n  import('../views/RegisterView.js' /* webpackChunkName: \"register-page\" */),\r\n);\r\nconst LoginView = lazy(() =>\r\n  import('../views/LoginView.js' /* webpackChunkName: \"login-page\" */),\r\n);\r\n\r\nconst ContactsView = lazy(() => \r\n  import('../views/ContactsView.js' /* webpackChunkName: \"contacts-page\" */)\r\n)\r\n\r\nconst Router = () => {\r\n  return (\r\n    <Suspense fallback={<h1>Loading...</h1>}>\r\n        <Switch>\r\n            <Route path={routes.home} exact component={HomeView} />\r\n            <Route path={routes.register} component={RegisterView} />\r\n            <Route path={routes.login} component={LoginView} />\r\n            <Route path={routes.contacts} component={ContactsView} />\r\n            <Route component={NotFoundView} />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Router;","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <div className={s.mainContainer}>\r\n        {children}\r\n      </div>\r\n    </section>\r\n  )\r\n}","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from './redux/auth';\nimport AppBar from './components/AppBar/AppBar';\nimport Router from './Router/Router';\nimport Container from './components/Container/Container';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onRefresh();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Router />\n      </Container>\n    );\n  }\n};\n\nconst mapDispatchToProps = {\n  onRefresh: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}